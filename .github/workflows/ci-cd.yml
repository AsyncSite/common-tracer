name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/**, fix/**, release/**, hotfix/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write
  packages: write

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout common-tracer
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Configure Gradle properties
      run: |
        mkdir -p ~/.gradle
        echo "gpr.user=${{ github.actor }}" >> ~/.gradle/gradle.properties
        echo "gpr.key=${{ secrets.PAT_TOKEN }}" >> ~/.gradle/gradle.properties

    - name: Build with Gradle (skip tests)
      run: ./gradlew build -x test --no-daemon --stacktrace --info
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Run tests
      run: ./gradlew test --no-daemon --stacktrace
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/build/test-results/test/'
        retention-days: 7

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: '**/build/reports/tests/'
        retention-days: 7

    - name: Send Discord Notification on Test Failure
      if: failure()
      env:
        STATUS_COLOR: '15158332'
        STATUS_EMOJI: '❌'
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{
               \"embeds\": [{
                 \"title\": \"$STATUS_EMOJI common-tracer 테스트 실패\",
                 \"color\": $STATUS_COLOR,
                 \"fields\": [
                   {\"name\": \"서비스\", \"value\": \"common-tracer\", \"inline\": true},
                   {\"name\": \"브랜치\", \"value\": \"${{ github.ref_name }}\", \"inline\": true},
                   {\"name\": \"실행자\", \"value\": \"${{ github.actor }}\", \"inline\": true},
                   {\"name\": \"커밋\", \"value\": \"\`${GITHUB_SHA::8}\`\", \"inline\": false},
                   {\"name\": \"메시지\", \"value\": \"테스트 단계에서 실패했습니다. 로그를 확인해주세요.\", \"inline\": false},
                   {\"name\": \"시간\", \"value\": \"$(TZ=Asia/Seoul date +'%Y-%m-%d %H:%M:%S KST')\", \"inline\": false}
                 ],
                 \"footer\": {
                   \"text\": \"AsyncSite CI/CD\"
                 },
                 \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
               }]
             }" \
             https://discord.com/api/webhooks/1399402822105038999/2qQDazifNKeW_c8MhHqcrw6Li5yDQtBL7f2JIBQ_b4qVT3Vxh7TfpMV3kBFnDYAFL3-h

  publish:
    name: Publish to GitHub Packages
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      (contains(github.ref, 'main') || contains(github.ref, 'release/'))

    steps:
    - name: Checkout common-tracer
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Configure Gradle properties
      run: |
        mkdir -p ~/.gradle
        echo "gpr.user=${{ github.actor }}" >> ~/.gradle/gradle.properties
        echo "gpr.key=${{ secrets.PAT_TOKEN }}" >> ~/.gradle/gradle.properties

    - name: Build library
      run: |
        chmod +x gradlew
        ./gradlew build -x test --no-daemon
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Publish to GitHub Packages
      run: ./gradlew publish --no-daemon --stacktrace
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Send Discord Notification
      if: always()
      env:
        STATUS_COLOR: ${{ job.status == 'success' && '3066993' || '15158332' }}
        STATUS_EMOJI: ${{ job.status == 'success' && '✅' || '❌' }}
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{
               \"embeds\": [{
                 \"title\": \"$STATUS_EMOJI common-tracer 배포 ${{ job.status }}\",
                 \"color\": $STATUS_COLOR,
                 \"fields\": [
                   {\"name\": \"서비스\", \"value\": \"common-tracer\", \"inline\": true},
                   {\"name\": \"브랜치\", \"value\": \"${{ github.ref_name }}\", \"inline\": true},
                   {\"name\": \"배포자\", \"value\": \"${{ github.actor }}\", \"inline\": true},
                   {\"name\": \"커밋\", \"value\": \"\`${GITHUB_SHA::8}\`\", \"inline\": false},
                   {\"name\": \"버전\", \"value\": \"0.1.0-SNAPSHOT\", \"inline\": false},
                   {\"name\": \"시간\", \"value\": \"$(TZ=Asia/Seoul date +'%Y-%m-%d %H:%M:%S KST')\", \"inline\": false}
                 ],
                 \"footer\": {
                   \"text\": \"AsyncSite CI/CD\"
                 },
                 \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
               }]
             }" \
             https://discord.com/api/webhooks/1399402822105038999/2qQDazifNKeW_c8MhHqcrw6Li5yDQtBL7f2JIBQ_b4qVT3Vxh7TfpMV3kBFnDYAFL3-h
